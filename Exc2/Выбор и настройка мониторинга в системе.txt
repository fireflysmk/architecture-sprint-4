============================
Мониторинг:
============================

- Производительность API (онлайн-магазин, CRM, MES)
- Состояние очередей RabbitMQ (кол-во сообщений в сек/час/день и тд, времена разбора очереди)
- использование ресурсов (CPU, память, дисковое пространство)
- Состояние баз данных (количество соединений, размер, использование памяти, кол-во записей в едвремени)
- Ошибки и доступность (HTTP-статусы, задержки)
- бизнес-метрики: кол-во заказов по статусам, кол-во активных заданий, пользователей

============================
Мотивация
============================

Зачем нужен мониторинг:
- Выявление проблем до их эскалации: Мониторинг позволит оперативно обнаруживать сбои, задержки и узкие места в системе, что снизит количество жалоб клиентов
- Улучшение пользовательского опыта: Отслеживание задержек и ошибок API поможет улучшить взаимодействие клиентов с системой
- Оптимизация ресурсов: Мониторинг использования CPU, памяти и дискового пространства позволит эффективно масштабировать инфраструктуру 
- Поддержка бизнеса: Данные мониторинга помогут обосновать необходимость инвестиций в инфраструктуру и разработку

Что это даст компании:
- Снижение количества жалоб клиентов
- Ускорение обработки заказов
- Улучшение репутации компании
- Эффективное использование ресурсов

============================
Выбор подхода к мониторингу
============================
Для разных частей системы будут использоваться разные подходы:
USE — для инфраструктуры (CPU, память, дисковое пространство, базы данных)
RED — для API (онлайн-магазин, CRM, MES)
Четыре золотых сигнала  — для интеграции через RabbitMQ

============================
Метрики для отслеживания
============================
Онлайн-магазин, CRM, MES API
Number of requests (RPS)
- Для оценки нагрузки на API
Ярлыки: service (shop, CRM, MES), endpoint

Response time (latency)
- Для оценки производительности API

Ярлыки: service, endpoint

Number of HTTP 200/500
- Для отслеживания успешных и ошибочных запросов
Ярлыки: service, endpoint, status_code

Number of simultaneous sessions:
- Для оценки активности пользователей

Ярлыки: service

RabbitMQ:
Number of dead-letter-exchange letters
- Для отслеживания проблем с обработкой сообщений
Ярлыки: queue_name

Number of messages
- Для оценки загруженности очередей
Ярлыки: queue_name

Инфраструктура
CPU % (или если вдруг речь зайдеь о кубернетес, лимиты/реквесты на под по cpu)
- Для оценки нагрузки на серверы (распределения общих ресурсов на все модули)
Ярлыки: service (shop, CRM, MES)

Memory Utilisation
- Для контроля использования памяти
Ярлыки: service

Number of connections for db instance
- Для оценки нагрузки на базы данных
Ярлыки: db_instance

Size of db instance
- Для контроля роста базы данных
Ярлыки: db_instance

Дополнительные метрики:
Kb transferred (received/sent):
- Для оценки сетевой нагрузки
Ярлыки: service

Size of storage:
- Для контроля использования хранилища
Ярлыки: disk space

============================
План действий
============================
Выбор инструментов мониторинга

- Использование Prometheus для сбора метрик
- Grafana для визуализации

Настройка сбора метрик:

Внедрение экспортеров для RabbitMQ, баз данных и API (например интеграция java-библиотек для спринг приложения, добавление рест контроллеров для сбора данных прометеусом или использование стандартных апи например у Postgre/RabbitMQ)

Создание дашбордов:
- Дашборды для API (RED-метрики)
- Дашборды для инфраструктуры (USE-метрики)
- Дашборды для RabbitMQ

Настройка алертинга:
- Определение пороговых значений для ключевых метрик
- Настройка уведомлений через Slack/Email

Интеграция с CI/CD:
- Автоматизация развертывания мониторинга через Terraform/Ansible

=================================================
Дополнительное задание: Показатели насыщенности
=================================================
Пороговые значения:
CPU %:
Порог: 80%
Действие: Добавить инстансов, завести тикет DevOps

Memory Utilisation:
Порог: 85%
Действие: Увеличить память, завести тикет DevOps

Number of connections for db instance:
Порог: 90% от максимального числа соединений
Действие: Оптимизировать запросы, увеличить лимиты

Number of dead-letter-exchange letters:
Порог: > 10 сообщений
Действие: Завести тикет разработчикам для анализа

Реакция на превышение порогов:
Автоматическое создание тикетов в Jira
Уведомления в Slack/Email для DevOps и разработчиков
